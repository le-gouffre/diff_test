name: Build and Publish Conan Package

on: 
    push:

jobs:
  detect_package_information:
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    outputs:
      changed_files: ${{ steps.detect.outputs.changed_files }}
      diff_content: ${{ steps.detect.outputs.diff_content }}
    steps:
      - name: Checkout repository with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures full history is available

      - name: Detect changed files
        id: detect
        run: |
          REM Ensure we have history to compare
          git rev-parse HEAD~1 >nul 2>&1
          if %ERRORLEVEL% NEQ 0 (
            echo "No previous commit found, skipping detection"
            exit /b 0
          )

          REM Get changed files from the last commit
          git diff-tree --no-commit-id --name-only -r HEAD > changed_files.txt

          REM Get diff content for changed files
          git diff HEAD~1 HEAD > diff_content.txt

          REM Check if files are empty and handle GitHub Actions output correctly
          for %%F in (changed_files.txt) do if %%~zF EQU 0 del changed_files.txt
          for %%F in (diff_content.txt) do if %%~zF EQU 0 del diff_content.txt

          echo Changed files:
          type changed_files.txt || echo "No relevant files changed."

          echo Diff content:
          type diff_content.txt || echo "No relevant diffs found."

          REM Concatenate file paths into a single valid string
          set "CHANGED_FILES="
          for /F "delims=" %%A in (changed_files.txt) do (
            if NOT "%%A"=="" set "CHANGED_FILES=!CHANGED_FILES! %%A"
          )
          if NOT "%CHANGED_FILES%"=="" echo changed_files=%CHANGED_FILES%>> %GITHUB_OUTPUT%

          REM Concatenate diff content into a single valid string
          set "DIFF_CONTENT="
          for /F "delims=" %%A in (diff_content.txt) do (
            if NOT "%%A"=="" set "DIFF_CONTENT=!DIFF_CONTENT! %%A"
          )
          if NOT "%DIFF_CONTENT%"=="" echo diff_content=%DIFF_CONTENT%>> %GITHUB_OUTPUT%


  verify_changes:
    needs: detect_package_information
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    steps:
      - name: Verify that changes were detected
        run: |
          echo "Verifying detected changes..."
          if "${{ needs.detect_package_information.outputs.changed_files }}"=="" (
            echo "No changes detected."
            exit /b 1
          ) else (
            echo "Changed files: ${{ needs.detect_package_information.outputs.changed_files }}"
            echo "Diff content: ${{ needs.detect_package_information.outputs.diff_content }}"
          )

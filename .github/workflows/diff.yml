name: Build and Publish Conan Package

on: 
    push:

jobs:
  detect_package_information:
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    outputs:
      changed_files: ${{ steps.detect.outputs.changed_files }}
      diff_content: ${{ steps.detect.outputs.diff_content }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Ensure we have history to compare

      - name: Detect changed files in tools directory
        id: detect
        run: |
          REM Detect changes inside 'tools/' directory and filter for specific files
          git diff --name-only HEAD^ HEAD | findstr /R /C:"tools/" | findstr /R /C:"conanfile.py" /C:"conandata.yml" /C:"config.yml" > changed_files.txt
          git diff HEAD^ HEAD | findstr /R /C:"tools/" | findstr /R /C:"conanfile.py" /C:"conandata.yml" /C:"config.yml" > diff_content.txt

          REM Check if files are empty and set a placeholder
          for %%F in (changed_files.txt) do if %%~zF EQU 0 echo EMPTY > changed_files.txt
          for %%F in (diff_content.txt) do if %%~zF EQU 0 echo EMPTY > diff_content.txt

          echo Changed files:
          type changed_files.txt

          echo Diff content:
          type diff_content.txt

          REM Write changed files to GITHUB_OUTPUT properly
          echo changed_files= >> %GITHUB_OUTPUT%
          for /F "delims=" %%A in (changed_files.txt) do (
            if NOT "%%A"=="EMPTY" echo %%A>> %GITHUB_OUTPUT%
          )

          REM Write diff content to GITHUB_OUTPUT properly
          echo diff_content= >> %GITHUB_OUTPUT%
          for /F "delims=" %%A in (diff_content.txt) do (
            if NOT "%%A"=="EMPTY" echo %%A>> %GITHUB_OUTPUT%
          )
